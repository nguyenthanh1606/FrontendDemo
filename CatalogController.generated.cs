// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Frontend.Controllers
{
    public partial class CatalogController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CatalogController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ProductGroup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProductGroup);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Brand()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Brand);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.PartialViewResult ProductGroupFilter()
        {
            return new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.ProductGroupFilter);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.PartialViewResult ListProductGroupAds()
        {
            return new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.ListProductGroupAds);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetPropertiesByProduct()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetPropertiesByProduct);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ProductGroupInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProductGroupInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetChildGroup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetChildGroup);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CatalogController Actions { get { return MVC.Catalog; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Catalog";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Catalog";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ProductGroup = "ProductGroup";
            public readonly string Brand = "Brand";
            public readonly string ProductGroupFilter = "ProductGroupFilter";
            public readonly string ListProductGroupAds = "ListProductGroupAds";
            public readonly string GetPropertiesByProduct = "GetPropertiesByProduct";
            public readonly string ProductGroupInfo = "ProductGroupInfo";
            public readonly string ProductGroupOnHome = "ProductGroupOnHome";
            public readonly string GetChildGroup = "GetChildGroup";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ProductGroup = "ProductGroup";
            public const string Brand = "Brand";
            public const string ProductGroupFilter = "ProductGroupFilter";
            public const string ListProductGroupAds = "ListProductGroupAds";
            public const string GetPropertiesByProduct = "GetPropertiesByProduct";
            public const string ProductGroupInfo = "ProductGroupInfo";
            public const string ProductGroupOnHome = "ProductGroupOnHome";
            public const string GetChildGroup = "GetChildGroup";
        }


        static readonly ActionParamsClass_ProductGroup s_params_ProductGroup = new ActionParamsClass_ProductGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ProductGroup ProductGroupParams { get { return s_params_ProductGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ProductGroup
        {
            public readonly string id = "id";
            public readonly string query = "query";
            public readonly string brand = "brand";
            public readonly string order = "order";
            public readonly string properties = "properties";
            public readonly string page = "page";
            public readonly string itemPerPage = "itemPerPage";
        }
        static readonly ActionParamsClass_Brand s_params_Brand = new ActionParamsClass_Brand();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Brand BrandParams { get { return s_params_Brand; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Brand
        {
            public readonly string id = "id";
            public readonly string query = "query";
            public readonly string order = "order";
            public readonly string page = "page";
            public readonly string itemPerPage = "itemPerPage";
        }
        static readonly ActionParamsClass_ProductGroupFilter s_params_ProductGroupFilter = new ActionParamsClass_ProductGroupFilter();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ProductGroupFilter ProductGroupFilterParams { get { return s_params_ProductGroupFilter; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ProductGroupFilter
        {
            public readonly string id = "id";
            public readonly string name = "name";
            public readonly string attr = "attr";
            public readonly string price = "price";
            public readonly string brand = "brand";
        }
        static readonly ActionParamsClass_ListProductGroupAds s_params_ListProductGroupAds = new ActionParamsClass_ListProductGroupAds();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListProductGroupAds ListProductGroupAdsParams { get { return s_params_ListProductGroupAds; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListProductGroupAds
        {
            public readonly string id = "id";
            public readonly string viewName = "viewName";
        }
        static readonly ActionParamsClass_GetPropertiesByProduct s_params_GetPropertiesByProduct = new ActionParamsClass_GetPropertiesByProduct();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPropertiesByProduct GetPropertiesByProductParams { get { return s_params_GetPropertiesByProduct; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPropertiesByProduct
        {
            public readonly string id = "id";
            public readonly string type = "type";
        }
        static readonly ActionParamsClass_ProductGroupInfo s_params_ProductGroupInfo = new ActionParamsClass_ProductGroupInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ProductGroupInfo ProductGroupInfoParams { get { return s_params_ProductGroupInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ProductGroupInfo
        {
            public readonly string id = "id";
            public readonly string viewName = "viewName";
        }
        static readonly ActionParamsClass_ProductGroupOnHome s_params_ProductGroupOnHome = new ActionParamsClass_ProductGroupOnHome();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ProductGroupOnHome ProductGroupOnHomeParams { get { return s_params_ProductGroupOnHome; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ProductGroupOnHome
        {
            public readonly string viewName = "viewName";
            public readonly string number = "number";
        }
        static readonly ActionParamsClass_GetChildGroup s_params_GetChildGroup = new ActionParamsClass_GetChildGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetChildGroup GetChildGroupParams { get { return s_params_GetChildGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetChildGroup
        {
            public readonly string id = "id";
            public readonly string viewName = "viewName";
            public readonly string countItem = "countItem";
            public readonly string getAllChildGroup = "getAllChildGroup";
            public readonly string getProductChildGroup = "getProductChildGroup";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Brand = "Brand";
                public readonly string ListProductGroupAds = "ListProductGroupAds";
                public readonly string ProductGroup = "ProductGroup";
            }
            public readonly string Brand = "~/Views/Catalog/Brand.cshtml";
            public readonly string ListProductGroupAds = "~/Views/Catalog/ListProductGroupAds.cshtml";
            public readonly string ProductGroup = "~/Views/Catalog/ProductGroup.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CatalogController : Frontend.Controllers.CatalogController
    {
        public T4MVC_CatalogController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ProductGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string query, int? brand, string order, string properties, int page, int? itemPerPage);

        [NonAction]
        public override System.Web.Mvc.ActionResult ProductGroup(int id, string query, int? brand, string order, string properties, int page, int? itemPerPage)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProductGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "query", query);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "brand", brand);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "order", order);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "properties", properties);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemPerPage", itemPerPage);
            ProductGroupOverride(callInfo, id, query, brand, order, properties, page, itemPerPage);
            return callInfo;
        }

        [NonAction]
        partial void BrandOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string query, string order, int page, int? itemPerPage);

        [NonAction]
        public override System.Web.Mvc.ActionResult Brand(int id, string query, string order, int page, int? itemPerPage)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Brand);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "query", query);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "order", order);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemPerPage", itemPerPage);
            BrandOverride(callInfo, id, query, order, page, itemPerPage);
            return callInfo;
        }

        [NonAction]
        partial void ProductGroupFilterOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo, int id, string name, string attr, string price, string brand);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult ProductGroupFilter(int id, string name, string attr, string price, string brand)
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.ProductGroupFilter);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "name", name);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "attr", attr);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "price", price);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "brand", brand);
            ProductGroupFilterOverride(callInfo, id, name, attr, price, brand);
            return callInfo;
        }

        [NonAction]
        partial void ListProductGroupAdsOverride(T4MVC_System_Web_Mvc_PartialViewResult callInfo, int id, string viewName);

        [NonAction]
        public override System.Web.Mvc.PartialViewResult ListProductGroupAds(int id, string viewName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_PartialViewResult(Area, Name, ActionNames.ListProductGroupAds);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewName", viewName);
            ListProductGroupAdsOverride(callInfo, id, viewName);
            return callInfo;
        }

        [NonAction]
        partial void GetPropertiesByProductOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int id, Store.Service.ProductServices.ProductGroupPropertiesType type);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetPropertiesByProduct(int id, Store.Service.ProductServices.ProductGroupPropertiesType type)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetPropertiesByProduct);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "type", type);
            GetPropertiesByProductOverride(callInfo, id, type);
            return callInfo;
        }

        [NonAction]
        partial void ProductGroupInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string viewName);

        [NonAction]
        public override System.Web.Mvc.ActionResult ProductGroupInfo(int id, string viewName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProductGroupInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewName", viewName);
            ProductGroupInfoOverride(callInfo, id, viewName);
            return callInfo;
        }

        [NonAction]
        partial void ProductGroupOnHomeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string viewName, int number);

        [NonAction]
        public override System.Web.Mvc.ActionResult ProductGroupOnHome(string viewName, int number)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProductGroupOnHome);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewName", viewName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "number", number);
            ProductGroupOnHomeOverride(callInfo, viewName, number);
            return callInfo;
        }

        [NonAction]
        partial void GetChildGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string viewName, int? countItem, bool getAllChildGroup, bool getProductChildGroup);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetChildGroup(int id, string viewName, int? countItem, bool getAllChildGroup, bool getProductChildGroup)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetChildGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewName", viewName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "countItem", countItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "getAllChildGroup", getAllChildGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "getProductChildGroup", getProductChildGroup);
            GetChildGroupOverride(callInfo, id, viewName, countItem, getAllChildGroup, getProductChildGroup);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
