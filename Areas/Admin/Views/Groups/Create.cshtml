@model Admin.Models.GroupViewModel

@{
    ViewBag.Title = Resource.Groups;
}
@section css{
    @Styles.Render("~/Content/css/elFinder")
}

<div class="page-title">
    <div class="title_left">
        <h3>
            @Resource.Groups
            <small>@Resource.Create</small>
        </h3>
    </div>
    <div class="title_right">
        <div class="pull-right">
            <div class="onoffswitch">
                <input type="checkbox" class="onoffswitch-checkbox" id="myonoffswitch" value="true" onchange="$('#properties_container').toggleClass('showAdvance')">
                <label class="onoffswitch-label" for="myonoffswitch">
                    <span class="onoffswitch-inner" data-locale-basic="@Resource.Basic" data-locale-advanced="@Resource.Advance"></span>
                    <span class="onoffswitch-switch"></span>
                </label>
            </div>
        </div>
    </div>
</div>

<div id="contentGroup">
    @using (Html.BeginForm("Create", "Groups", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div id="properties_container">
            @Html.ValidationSummary(true)
            @Html.EditorForModel()
            
            <div class="form-group">
                <div class="col-md-offset-2 col-sm-offset-3 col-md-10 col-sm-9 col-xs-12">
                    <input type="submit" value="@Resource.Save" class="btn btn-primary" />
                    <a href="@(ViewBag.ReturnUrl?? @Url.Action("Index"))" class="btn btn-default">@Resource.BackToList</a>
                </div>
            </div>
        </div>
    }
</div>

@section scripts{
    @Scripts.Render("~/bundles/elFinder")
    <script type="text/javascript" src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="~/Scripts/ckeditor/adapters/jquery.js"></script>

    <script>
        var vmProductGroup = new Vue({
            mixins: [groupMixin],
            el: '#contentGroup',
            data: {
                isEditUrl: false,
                currentUrl: '',
                friendlyUrl: '@(Model.FriendlyUrl?? "")',
                originalFriendlyUrl:'@(Model.FriendlyUrl?? "")',
                externalLink:'@(Model.ExternalLink?? "")',
                originalExternalLink:'@(Model.ExternalLink?? "")',
                isUseExternalLink: @Model.IsUseExternalLink.ToString().ToLower(),
                originalIsUseExternalLink:@Model.IsUseExternalLink.ToString().ToLower(),

                group: @Html.Raw(Json.Encode(Model)),
                groupTitleMaxLength: 128,
                customizeTitleMaxLength: 128,
            },
            created: function () {
                var self = this;
                var title = document.getElementById('@Html.IdFor(m => m.Title)');
                self.groupTitleMaxLength = title.dataset.valMaxlengthMax;
                var customizeTitle = document.getElementById('@Html.IdFor(m => m.CustomizeTitle)');
                self.customizeTitleMaxLength = title.dataset.valMaxlengthMax;
            }
        });

        $(document).ready(function () {
            initCkEl('@Url.Action("GetFile", "Files")', '@Request.Cookies["lang"].Value.Substring(0, 2)');
            InitElf('@Url.Action("GetFile", "Files")', '@Request.Cookies["lang"].Value.Substring(0, 2)');

            ReplaceSelect2('@Request.Cookies["lang"].Value.Substring(0, 2)');
            ReplaceCKEditor();
        });

        $('#ImageUrl, #BannerUrl, #IconUrl').on('change', function () {
            $('#' + $(this).attr('id') + 'Thumbnail').attr('src', $(this).val())
        });
    </script>
}

