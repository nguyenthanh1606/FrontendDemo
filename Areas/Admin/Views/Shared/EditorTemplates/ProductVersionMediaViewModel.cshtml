@model Admin.Models.ProductVersionMediaViewModel
@using Store.Service.ProductServices

@Html.HiddenFor(m => m.Id, new { v_model = "versionMedia.Id" })
@Html.HiddenFor(m => m.ProductId, new { value = ViewBag.ProductID })

<div class="form-group">
    @Html.LabelFor(model => model.MediaType, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.DropDownListFor(model => model.MediaType, ViewBag.MediaTypes as SelectList,
         new { @class = "form-control", v_model = "versionMedia.MediaType" })
        @Html.ValidationMessageFor(model => model.MediaType)
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Title, new { @class = "form-control", v_model = "versionMedia.Title" })
        @Html.ValidationMessageFor(model => model.Title)
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.MediaStyle, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.DropDownListFor(model => model.MediaStyle, ViewBag.MediaStyles as SelectList,
         new { @class = "form-control", v_model = "versionMedia.MediaStyle", @readonly = "readonly", @disabled = "disabled" })
        @Html.ValidationMessageFor(model => model.MediaStyle)
    </div>
</div>
@*<div class="form-group" v-show="versionMedia.MediaStyle == @((int)MediaStyle.Video)">
    @Html.LabelFor(model => model.MediaUrl, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.FilesManagerTextboxFor(model => model.MediaUrl, new { @class = "form-control", v_model = "versionMedia.MediaUrl" })
        @Html.ValidationMessageFor(model => model.MediaUrl)
    </div>
</div>
<div class="form-group" v-show="versionMedia.MediaStyle == @((int)MediaStyle.Youtube)">
    @Html.LabelFor(model => model.Youtube, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Youtube, new { @class = "form-control", v_model = "versionMedia.Youtube" })
        @Html.ValidationMessageFor(model => model.Youtube)
    </div>
</div>
<div class="form-group" v-show="versionMedia.MediaStyle == @((int)MediaStyle.Color)">
    @Html.LabelFor(model => model.ColorCode, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.FilesManagerTextboxFor(model => model.ColorCode, new { @class = "form-control", v_model = "versionMedia.ColorCode" })
        @Html.ValidationMessageFor(model => model.ColorCode)
    </div>
</div>*@
<div class="form-group" v-show="versionMedia.MediaStyle == @((int)MediaStyle.General)">
    @Html.LabelFor(model => model.MediaUrl, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.FilesManagerTextboxForM(model => model.MediaUrl, null, new { @class = "form-control", v_model = "versionMedia.MediaUrl" })
        @Html.ValidationMessageFor(model => model.MediaUrl)
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.MediaContent, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextAreaFor(model => model.MediaContent, new { @class = "form-control ck_editor", v_model = "versionMedia.MediaContent" })
        @Html.ValidationMessageFor(model => model.MediaContent)
    </div>
</div>
@*<div class="form-group">
    @Html.LabelFor(model => model.Priority, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Priority, new { @class = "form-control", v_model = "versionMedia.Priority" })
        @Html.ValidationMessageFor(model => model.Priority)
    </div>
</div>*@