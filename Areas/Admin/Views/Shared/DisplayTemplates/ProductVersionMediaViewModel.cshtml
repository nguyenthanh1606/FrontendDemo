@model Admin.Models.ProductVersionMediaViewModel
@using Store.Service.ProductServices

@Html.HiddenFor(m => m.Id, new { v_model = "versionMedia.Id" })
@Html.HiddenFor(m => m.ProductId, new { value = ViewBag.ProductID })

<div class="form-group">
    @Html.LabelFor(model => model.MediaStyle, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.MediaStyleName, new { @class = "form-control", @readonly = "readonly", v_model = "versionMedia.MediaStyleName" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @readonly = "readonly", v_model = "versionMedia.Title" })
    </div>
</div>
@*<div class="form-group" v-show="versionMedia.StyleMedia != @((int)MediaStyle.Video)">
    @Html.LabelFor(model => model.MediaUrl, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        <span v-if="versionMedia.MediaUrl !== null">
            <video v-if="versionMedia.MediaUrl.endsWith('.mp4') || versionMedia.MediaUrl.endsWith('.webm')" v-bind:src="versionMedia.MediaUrl" class="img-responsive"></video>
            <img v-else v-bind:src="versionMedia.MediaUrl" alt="@Html.DisplayNameFor(m => m.MediaUrl)" class="img-responsive" />
        </span>
    </div>
</div>*@
<div class="form-group" v-show="versionMedia.StyleMedia == @((int)MediaStyle.Video)">
    @Html.LabelFor(model => model.Youtube, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Youtube, new { @class = "form-control", @readonly = "readonly", v_model = "versionMedia.Youtube" })
    </div>
</div>
<div class="form-group" v-show="versionMedia.StyleMedia == @((int)MediaStyle.Color)">
    @Html.LabelFor(model => model.ColorCode, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.ColorCode, new { @class = "form-control", @readonly = "readonly", v_model = "versionMedia.ColorCode" })
    </div>
</div>
<div class="form-group" v-show="versionMedia.StyleMedia == @((int)MediaStyle.General)">
    @Html.LabelFor(model => model.Thumbup, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Thumbup, new { @class = "form-control", @readonly = "readonly", v_model = "versionMedia.Thumbup" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.MediaContent, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        <div class="form-control html-area" readonly v-html="versionMedia.MediaContent"></div>
    </div>
</div>
@*<div class="form-group">
    @Html.LabelFor(model => model.Priority, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
    <div class="col-md-10 col-sm-9 col-xs-12">
        @Html.TextBoxFor(model => model.Priority, new { @class = "form-control", @readonly = "readonly", v_model = "versionMedia.Priority" })
    </div>
</div>*@
