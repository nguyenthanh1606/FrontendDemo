
@model Admin.Models.ReplyMailViewModel

@using (Ajax.BeginForm("Reply", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = string.Format("ClearForm({0})", Model.ReplyMailID), OnFailure = "AlertFailure" }, new { id = "replyForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.OriginalMailID)
    @Html.HiddenFor(m => m.ReplyMailID)
    @Html.HiddenFor(m => m.Title)
    <input hidden id="@(Model.ReplyMailID + "Receiver")" value="@ViewBag.ReceiverID"/>
    <div class="compose-body">
        <div class="input-group">
            <span class="input-group-addon" aria-describedby="basic-addon1">@Html.DisplayNameFor(m => m.ReceiverID)</span>
            <select class="form-control" id="@(Model.ReplyMailID + "ReceiverID")" name="ReceiverID" aria-describedby="basic-addon1" style="width:100%; height: 34px;" multiple="multiple"></select>
        </div>
        @Html.ValidationMessageFor(m => m.ReceiverID)

        @Html.TextAreaFor(m => m.Content, new { id = Model.ReplyMailID + "Content" })
    </div>

    <div class="compose-footer">
        <input type="submit" class="btn btn-sm btn-success" id="send" value="@Resource.Send" />
    </div>
}