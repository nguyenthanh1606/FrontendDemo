@using PagedList.Mvc
@model PagedList.IPagedList<Admin.Models.MenuItemViewModel>
@using Store.Service.Helper.ExtensionMethod;

<table class="table table-hover">
    <thead class="thead-inverse">
        <tr>
            <th class="width-8">
                @Resource.MenuName
            </th>
            <th class="width-8">
                @Resource.Position
            </th>
            <th class="width-4">
                @Resource.Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.MenuName)
                </td>
                <td>
                    @{
                        if (item.MenuPosition.HasValue)
                        {
                            Store.Service.Service.MenuType type = (Store.Service.Service.MenuType)item.MenuPosition.Value;
                            @Html.Raw(type.GetDescription())
                        }
                    }
                </td>
                <td>
                    <div class="btn-group">
                        <a href="@Url.Action("Update", new { id = item.MenuID })" class="btn btn-default">
                            <i class="fa fa-pencil" aria-hidden="true"></i> @Resource.Edit
                        </a>
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <span class="caret"></span>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>

                        <ul class="dropdown-menu btn-dropdown-menu" role="menu">
                            <li>
                                <a href="@Url.Action("Detail", new { id = item.MenuID })">
                                    <i class="fa fa-trash-o" aria-hidden="true"></i> @Resource.Detail
                                </a>
                            </li>
                            <li>
                                <a href="@Url.Action("Remove", new { ComponentID = item.MenuID, deleteMenuRoot = true })">
                                    <i class="fa fa-trash-o" aria-hidden="true"></i> @Resource.Delete
                                </a>
                            </li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
</table>

<div class="pull-left">
    @string.Format(Resource.PaginationTxt, Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber, @Model.PageCount)
</div>
<div class="pull-right">
    @Html.PagedListPager(Model, page => Url.Action("ListRootMenu", new { page }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
        {
            HttpMethod = "GET",
            UpdateTargetId = "list",
            OnSuccess = string.Format("UpdatePagingAjaxUrl(this)")
        }))
</div>