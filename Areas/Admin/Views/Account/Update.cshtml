
@model Admin.Models.UpdateAccountViewModel
@{
    ViewBag.Title = @Resource.Account;
}

<div class="page-title">
    <div class="title_left">
        <h3>
            @Resource.Account
            <small>@Resource.Update</small>
        </h3>
    </div>
</div>

<div class="main-contain">
    @using (Html.BeginForm(""))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-10 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-10 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-10 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Career, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-10 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Career, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Career)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Workplace, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-10 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Workplace, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Workplace)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-10 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-10 col-sm-9 col-xs-12">
                    @Html.DropDownListFor(model => model.City, ViewBag.Cities as SelectList, new { @class = "form-control ddl_select2" })
                    @Html.ValidationMessageFor(model => model.City)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2 col-sm-3 col-xs-12" })
                <div class="col-md-10 col-sm-9 col-xs-12">
                    @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PhoneNumber)
                </div>
            </div>
            @*Store role for handle in update*@

            @for (int i = 0; i < Model.Roles.Count(); ++i)
            {
                @Html.HiddenFor(m => m.Roles[i])
            }
            <div class="form-group">
                <label class="control-label col-md-2 col-sm-3 col-xs-12">@Resource.UserRoles</label>
                <div class="center_form col-md-10 col-sm-9 col-xs-12">
                @foreach (var item in (SelectList)ViewBag.Roles)
                {
                    if (!(Model.Id == 1 && item.Text.Trim().ToLower() == "administrator"))
                    {
                        <label class="checkbox-inline">
                            <input type="checkbox" name="selectedRoles" value="@item.Value" class="checkbox-inline" @(Model.Roles.Contains(item.Text) ? "checked" : "") />@item.Text
                        </label>
                    }
                    else
                    {
                        <label class="checkbox-inline">
                            <input type="checkbox" name="selectedRoles" value="@item.Value" class="checkbox-inline" checked onclick="return false" />@item.Text
                        </label>
                    }
                }
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-sm-offset-3 col-md-10 col-sm-9 col-xs-12">
                    <input type="submit" value="@Resource.UpdateAccount" class="btn btn-primary" />
                    @Html.ActionLink(Resource.Skip, "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            ReplaceSelect2('@Request.Cookies["lang"].Value.Substring(0, 2)');
        });
    </script>
}