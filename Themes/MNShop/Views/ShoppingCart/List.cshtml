@model Frontend.Models.ShoppingCartViewModel
@{
    ViewBag.Title = Resource.ShoppingCart;
}

<main class="page-checkout">
    <div class="container breadcrumb-ds">
        @Html.Breadcrumb(Frontend.Infrastructure.Utility.BreadcrumbType.Custom, htmlAttributes: new { @class = "breadcrumb" }, customMenuName: Resource.ShoppingCart, customUrl: Url.Action("List", "ShoppingCart"))
    </div>

    <div class="page-checkout--body container">
        @using (Html.BeginForm("Checkout", "ShoppingCart", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            Html.RenderPartial("Checkout", new Frontend.Models.CheckoutViewModel());
            <div class="page-checkout-detail box-container" id="cartPage">
                <div class="box-cart">
                    <div class="box-header">
                        <div class="box-icon">
                            <img src="~/Themes/MNShop/images/icons/cart-3.svg" alt="MN Shop" />
                        </div>
                        <h3 class="box-title">THÔNG TIN NHẬN HÀNG</h3>
                    </div>
                    <div class="box-body">
                        @using (Ajax.BeginForm("UpdateCart", "ShoppingCart", new AjaxOptions
                        {
                            HttpMethod = "POST",
                            OnFailure = "ShowAlertMessage()",
                            OnSuccess = "UpdateCartSuccessful"
                        }))
                        {
                            <div class="box-cart--list">
                                <div class="box-cart--item" v-for="(item, index) in cart">
                                    <div class="box-cart--item_thumbnail">
                                        <a v-bind:href="'/' + item.Url">
                                            <img v-bind:src="item.ImageUrl" alt="">
                                        </a>
                                    </div>
                                    <div class="box-cart--item_detail">
                                        <h4 class="box-cart--item_title">{{item.Title}}</h4>
                                        <div class="box-cart--item_price">
                                            <span>{{item.CustomPrice |formatMoney }} VND</span>
                                            <input type="number" v-model="item.Quantity" v-bind:value="item.Quantity" max="1000" min="0" v-bind:name="'ListItems[' + index + '].Quantity'">
                                        </div>
                                    </div>
                                    <div class="box-cart--item_total">
                                        <h4>{{item.CustomPrice * item.Quantity |formatMoney }}</h4>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="box-cart--total">
                            <span>Tổng tiền:</span>
                            <strong>{{sumMoney | formatMoney}} VND</strong>
                        </div>
                        <div class="box-cart--deleveryPrice">
                            <span>Phí vận chuyển:</span>
                            <span>@Html.Raw(Model.ShippingNote.Description != null ? Model.ShippingNote.Description : "0") VND</span>
                        </div>
                        <div class="box-cart--totalPrice">
                            <span>Tổng tiền cần thanh toán:</span>
                            <strong>{{getTotalPrice | formatMoney}} VND</strong>
                        </div>
                        <div class="box-cart--call">
                            <div class="box-cart--call_icon">
                                <img src="~/Themes/MNShop/images/icons/cart-6.svg" alt="MN Shop" />
                            </div>
                            <div class="box-cart--call_info">
                                <p>ĐẶT HÀNG QUA ĐIỆN THOẠI</p>
                                <a href="tel:@Model.Hotline.ParaValue">@Model.Hotline.ParaValue</a>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <button type="submit" class="btn btn-danger btn-default text-uppercase">@Resource.Checkout</button>
                        <button type="button" onclick="window.location.href='/'" class="btn btn-info btn-default">TIẾP TỤC MUA HÀNG</button>
                    </div>
                </div>
            </div>
        }
    </div>
</main>

@section scripts{
    <script>
        var vmCart = new Vue({
            mixins: [vmShoppingCart],
            el: '#cartPage',
            data: {
                cart: null,
                discountValue: @Model.DiscountValue,
            },
            filters: {
                formatMoney: function (value) {
                    return value.toLocaleString("@Request.Cookies["lang"].Value", { minimumFractionDigits: 0 });
                }
            },
        });

        function checkCouponCode($this) {
            $.post($this.attr('action'), $this.serialize(), function (response) {
                if (response != null) {
                    vmCart.discountValue = response.DiscountPrice;
                    if (response.Message != null && response.Message != '') {
                        $("#couponCodeMessage").text(response.Message);
                    }
                }
            });

            return false;
        }
    </script>
    <script>
        var vmCheckout = new Vue({
            el: '#checkout_page',
            data: {
                fullName: '',
                customerAddress: '',
                selectedProvince: '',
                selectedDistrict: '',
                selectedWard: '',
                provinces: [], // Replace with your province data
                districts: [], // Will be populated based on selected province
                wards: [] // Will be populated based on selected district
            },
            methods: {
                provinceChanged() {
                    $.ajax({
                        url: '/Common/GetDistrict', // Replace with your actual controller and action method
                        method: 'GET',
                        data: { id: this.selectedProvince },
                        success: (response) => {
                            this.districts = response;

                            this.selectedDistrict = '';
                            this.selectedWard = '';
                        },
                        error: (xhr, status, error) => {
                            console.error('Error fetching provinces:', error);
                        }
                    });
                },
                districtChanged() {
                    $.ajax({
                        url: '/Common/GetWard', // Replace with your actual controller and action method
                        method: 'GET',
                        data: { id: this.selectedDistrict },
                        success: (response) => {
                            this.wards = response;

                            this.selectedWard = '';
                        },
                        error: (xhr, status, error) => {
                            console.error('Error fetching provinces:', error);
                        }
                    });
                },
                fetchProvinces() {
                    $.ajax({
                        url: '/Common/GetCity', // Replace with your actual controller and action method
                        method: 'GET',
                        success: (response) => {
                            this.provinces = response;

                            // Set the selected province to the first one by default
                            if (this.provinces.length > 0) {
                                this.selectedProvince = this.provinces[0].Value;
                                // Trigger fetching districts based on the selected province if needed
                                this.provinceChanged(this.provinces[0].Value);
                            }
                        },
                        error: (xhr, status, error) => {
                            console.error('Error fetching provinces:', error);
                        }
                    });
                },
            },
            mounted() {
                // Fetch provinces via AJAX when component is mounted
                this.fetchProvinces();
            },
        });

    </script>
}
